<?xml version="1.0" encoding="utf-8"?>
<topic id="64f4468c-70df-4827-b028-66d547ce7952" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <summary>
      <para>Everything you need to know in order to submit documentation to Brimstone.</para>
    </summary>
    <introduction>
      <autoOutline lead="In this section:"/>
    </introduction>

    <section address="strategy">
      <title>How the documentation web site is created</title>
      <content>
        <para>
          Brimstone uses <legacyBold>Sandcastle Help File Builder</legacyBold> (SHFB) to build the documentation web site. Sandcastle parses all of the XML comments in the code files to produce an API reference, and parses hand-written documentation in a help file markup language called MAML to produce the other pages.
        </para>
        <para>
          The documentation is stored in the Brimstone solution itself under the <legacyBold>BrimstoneDocumentation</legacyBold> project. To open this project, you must have SHFB installed.      <externalLink>
            <linkText>Download the installer</linkText>
            <linkUri>https://GitHub.com/EWSoftware/SHFB/releases</linkUri>
            <linkTarget>_blank</linkTarget>
          </externalLink> and be sure to install all of the optional components - particularly the SHFB and MAML IntelliSense extensions for Visual Studio - as these will make your life much easier.
        </para>
        <para>
          The documentation is built only when the <legacyBold>Documentation</legacyBold> build configuration is selected. This is the only build mode under which the Brimstone library build generates XML documentation, and the only build in which BrimstoneDocumentation is actually compiled. The finished documentation is generated in the <codeInline>/docs</codeInline> folder in the root of the Brimstone solution. The build configurations are organized this way because building the documentation is a time-consuming process.
        </para>
        <para>
          While the <codeEntityReference>R:Project_BrimstoneDocumentation</codeEntityReference> portion of the documentation is generated from the XML comments in the code source files themselves, the remaining articles are written separately in MAML. The MAML content files can be found in the <legacyBold>Content</legacyBold> folder, images are stored in the <legacyBold>media</legacyBold> folder and the table of contents (left pane hierarchy) can be configured via the <legacyBold>ContentLayout.content</legacyBold> file. Each <codeInline>.aml</codeInline> file constitutes one topic, each with its own unique GUID which is used for link cross-referencing.
        </para>
        <para>
          A crash course in Sandcastle and MAML follows. Refer to the <externalLink>
            <linkText>Sandcastle MAML Guide</linkText>
            <linkUri>http://ewsoftware.github.io/MAMLGuide/html/303c996a-2911-4c08-b492-6496c82b3edb.htm</linkUri>
            <linkTarget>_blank</linkTarget>
          </externalLink> for additional help with MAML tag syntax.
        </para>
        <alert class="important">
          <para>When you submit documentation, only include changes to <codeInline>ContentLayout.content</codeInline>, media and <codeInline>.aml</codeInline> files. Do not include the entire auto-generated <codeInline>/docs</codeInline> folder in your pull request as this creates a lot of commit noise. We will recompile the documentation web site when your PR is merged.</para>
        </alert>
      </content>
    </section>

    <section address="newtopic">
      <title>How to create a new topic</title>
      <content>
        <list class="ordered">
          <listItem>
            <para>
              Open <legacyBold>ContentLayout.content</legacyBold>, right-click on the topic you wish to create a new topic next to or underneath and select <legacyBold>Add Sibling/Child Topic -> Add Topic From a Template...</legacyBold>
            </para>
          </listItem>
          <listItem>
            <para>
              Select the template that most suits the article you are going to write. If you are not sure which to pick, choose <legacyBold>Conceptual</legacyBold>, which gives the most generic layout. If you are creating a topic which will just be a parent to other topics with an introductory paragraph, choose <legacyBold>Orientation</legacyBold>. If you are creating a topic which will be a parent to other topics with no content at all, choose <legacyBold>Add Empty Container Topic</legacyBold> from the menu instead.
            </para>
            <alert class="tip">
              <para>The difference between empty topics and Orientation topics is that empty topics do not have a page associated with them - instead, when the user clicks on an empty topic, it will redirect them to the first child. An Orientation topic, on the other hand, has text and can contain links to the child (or any other) topics.</para>
            </alert>
          </listItem>
          <listItem>
            <para>
              Choose a topic filename in <legacyBold>UpperCamelCase</legacyBold> with a similar name to your intended topic title.
            </para>
          </listItem>
          <listItem>
            <para>
              Once you have created the topic file, enter a <legacyBold>Title</legacyBold> for the topic in the Topic Properties section of the content layout editor. This is the title that will actually be displayed in the documentation tree and at the top of the documentation page.
            </para>
          </listItem>
        </list>
      </content>
    </section>

    <section address="standardlayouts">
      <title>Standard topic file layouts</title>
      <content>
        <para>These are the basic layout templates we use in the Brimstone documentation. They may be adapted for other purposes as needed.</para>
        <para>
          <legacyBold>For orientation topics (topics that are the parent of a related group of child topics):</legacyBold>
        </para>
        <code language="xml">
          <![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<topic id="[guid-of-topic]" revisionNumber="1">
  <developerOrientationDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <summary>
      <para>Put a one line summary of your topic here.</para>
    </summary>
    <introduction>
      <para>Put one or more introductory paragraphs here introducing the content.</para>
      <para>You can use as many or as few paragraphs as you need.</para>
    </introduction>
    <inThisSection>
      <content>
        <!-- Put links to all of the child topics here, one per line as shown -->
        <para><link xlink:href="cfbf62f4-cb3b-4697-8f98-221c39cd3232" /></para>
        <para><link xlink:href="64f4468c-70df-4827-b028-66d547ce7952" /></para>
      </content>
    </inThisSection>
 </developerOrientationDocument>
</topic>
]]>
        </code>
        <para>
          <legacyBold>For general topics:</legacyBold>
        </para>
        <code language="xml">
          <![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<topic id="[guid-of-topic]" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <summary>
      <para>A one-sentence summary of the article.</para>
    </summary>
    <introduction>
      <para>An optional longer description of the article if you wish.</para>
      <para>You can use as many or as few paragraphs as you need.</para>
      <!-- This will cause a list of links to be automatically generated for any <section>s below with an address attribute -->
      <autoOutline lead="In this section:"/>
    </introduction>

    <section address="firstsection">
      <title>Section 1 title</title>
      <content>
        <para>
          First paragraph.
        </para>
        <para>
          As many paragraphs as you like...
        </para>
        <para>
        <!-- If your section has sub-sections, you can use <autoOutline /> to generate a list of sub-section links here -->
      </content>
      <sections>
        <section>
          <title>Place sub-sections in a sections tag like this</legacyBold>
          <content>
            <para>Sub-section text. Sub-sections are not collapsible.</para>
          </content>
        </section>
        <section>
          <!-- As many sub-sections as you like -->
        </section>
      </sections>
    </section>
    
    <section address="secondsection">
      <title>Section 2 Title</title>
      <content>
         <!-- Repeat for as many sections as desired -->
      </content>
    </section>
    
    <!-- This tag must be included even if it is empty -->
    <relatedTopics>
      <!-- Put links to other topics and external resources (web pages) here -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
]]>
        </code>
      </content>
    </section>

    <section address="preview">
      <title>How to preview a topic</title>
      <content>
        <para>You do not need to re-compile the entire documentation to view your changes. Simply open the <legacyBold>Topic Previewer</legacyBold> via the <legacyBold>View -> Other Windows -> Topic Previewer Window</legacyBold> option. When you save your document, click the Refresh icon or press F5 in the Topic Previewer to see a preview of the document. Note that some formatting may be different and links to .NET elements and the API Reference will render in bold text rather than as a link.
      </para>
        <para>If you wish to preview the entire documentation, build the solution (press F7) in Documentation build configuration. This may take several minutes to complete. Once the compilation is finished, click <legacyBold>View Help File</legacyBold> on the SHFB Toolbar, accessible via the <legacyBold>View -> Toolbars -> Sandcastle Help File Builder</legacyBold> menu option. This will allow you to view the documentation in a web browser.
      </para>
        <alert class="tip">
          <para>
            By default, compiling the documentation will start an IIS Express server hosting the documentation web site with the homepage at <externalLink>
              <linkText>http://localhost:12345/SHFBOutput_1572097774/index.html</linkText>
              <linkUri>http://localhost:12345/SHFBOutput_1572097774/index.html</linkUri>
              <linkTarget>_blank</linkTarget>
            </externalLink>.
          </para>
        </alert>
      </content>
    </section>

    <section address="movetopic">
      <title>How to move a topic in the documentation tree</title>
      <content>
        <list class="bullet">
          <listItem>
            <para>
              <legacyBold>To move a topic to another location at the same level in the tree:</legacyBold> Click the topic in the <legacyBold>ContentLayout.content</legacyBold> editor window, then use the green arrows in the toolbar above to move the page up or down.</para>
          </listItem>
        <listItem>
          <para>
            <legacyBold>To move a topic to another level in the tree:</legacyBold> Right-click the topic, select <legacyBold>Cut</legacyBold>, click on the topic you wish to be the new topic parent, right-click and choose <legacyBold>Paste as Child</legacyBold>.
          </para>
        </listItem>
        </list>
      </content>
    </section>

    <section address="topiclink">
      <title>How to insert a link to another topic</title>
      <content>
        <para>
          You do not need to work with topic GUIDs directly. To insert a link to another topic page:
        </para>
        <list class="ordered">
          <listItem>
            <para>
              Open the <legacyBold>Entity References</legacyBold> window via the <legacyBold>View -> Other Windows -> Entity References Window</legacyBold> menu option.
            </para>
          </listItem>
          <listItem>
            <para>
              Choose <legacyBold>Table of Contents</legacyBold> from the drop-down box to show the documentation tree.
            </para>
          </listItem>
          <listItem>
            <para>
              Drag the node of the topic you wish to include into your MAML document. The link tag will be inserted at the cursor position.
            </para>
          </listItem>
        </list>
      </content>
    </section>

    <section address="apilink">
      <title>How to insert a link to a .NET element or an item in the API Reference</title>
      <content>
        <para>Code elements are referred to using a special syntax explained <externalLink>
          <linkText>here</linkText>
          <linkUri>http://ewsoftware.github.io/MAMLGuide/html/bc490dbf-7d46-432d-a816-3ae16ab6af54.htm</linkUri>
          <linkTarget>_blank</linkTarget>
        </externalLink>. These can include links to external documentation such as the MSDN web site as well as the Brimstone API Reference. Entering these references by hand can be awkward, but you can insert them in a similar way to topic links:</para>
        <list class="ordered">
          <listItem>
            <para>
              Open the <legacyBold>Entity References</legacyBold> window via the <legacyBold>View -> Other Windows -> Entity References Window</legacyBold> menu option.
            </para>
          </listItem>
          <listItem>
            <para>
              Choose <legacyBold>Code Entities</legacyBold> from the drop-down box to show the topic tree.
            </para>
          </listItem>
          <listItem>
            <para>
              Search for the code element you wish to refer to in the <legacyBold>Find</legacyBold> box.
            </para>
            <alert class="note">
              <para>Only elements with XML documentation will be listed in the Entity References window. To link to elements without XML documentation, you must enter the refrence syntax by hand.</para>
            </alert>
          </listItem>
          <listItem>
            <para>
              Drag the node of the element you wish to link to into your MAML document. The link tag will be inserted at the cursor position.
            </para>
          </listItem>
        </list>
      </content>
    </section>

    <section address="externallink">
      <title>How to insert an external link</title>
      <content>
        <para>External links are links to web pages which are not part of the Brimstone documentation web site. The MAML syntax for creating links is verbose and most easily performed by using code snippet insertion as follows:</para>
        <list class="ordered">
          <listItem>
            <para>Press CTRL+K, CTRL+X to bring up the snippets menu</para>
          </listItem>
          <listItem>
          <para>Press Down Arrow, Enter, Down Arrow, Down Arrow, Enter, then type 'ex' and press Enter again. This will add the link code template at the cursor position.</para>
          </listItem>
          <listItem>
            <para>Type link name and press Tab twice.</para>
          </listItem>
          <listItem>
            <para>Type or paste the link URL.</para>
          </listItem>
          <listItem>
            <para>Delete the <codeInline>&lt;linkAlternateText></codeInline> tag.</para>
          </listItem>
        </list>
      </content>
    </section>

    <section address="code">
      <title>How to insert code</title>
      <content>
        <para>Use the <codeInline>&lt;code></codeInline> tag to insert blocks of code as follows:
      </para>
        <code language="xml"><![CDATA[
<code language="cs">
// Any block of code here
</code>
]]></code>
        <para>
          To insert code in the middle of a sentence, use the <codeInline>&lt;codeInline></codeInline> tag as follows:
        </para>
        <code language="xml"><![CDATA[
<para>Prefer Linq queries to <codeInline>foreach</codeInline> loops.</para>
<para>Destroy your computer by executing the command: <codeInline>sudo rm -rf /</codeInline>. Note, this is not recommended.</para>
]]></code>
      </content>
    </section>

    <section address="image">
      <title>How to insert an image</title>
      <content>
        <para>
          Images for inclusion in documentation should be added to the <legacyBold>media</legacyBold> folder, then added to the project in Visual Studio by right-clicking the folder in <legacyBold>Solution Explorer</legacyBold> and using <legacyBold>Add Existing Item...</legacyBold> menu option to add it to the project. You can then insert the image into a document as follows:
        </para>
        <list class="ordered">
          <listItem>
            <para>
              Open the <legacyBold>Entity References</legacyBold> window via the <legacyBold>View -> Other Windows -> Entity References Window</legacyBold> menu option.
            </para>
          </listItem>
          <listItem>
            <para>
              Choose <legacyBold>Images</legacyBold> from the drop-down box to show the list of images in the project.
            </para>
          </listItem>
          <listItem>
            <para>
              Drag the node of the image you wish to include into your MAML document. The image code will be inserted at the cursor position.
            </para>
          </listItem>
        </list>
      </content>
    </section>

    <section address="style">
      <title>Documentation style guidelines</title>
      <content>
        <para>New documentation must follow the standards of the existing documentation for consistency. Bear in mind the following points as you write:</para>
        <list class="bullet">
          <listItem>
            <para>
              Place sub-sections inside a <codeInline>&lt;sections></codeInline> element after the closing <codeInline>&lt;/content></codeInline> tag section of the parent section like this:
            </para>
            <code language="xml"><![CDATA[
<sections>
  <section>
    <title>First sub-section</title>
    <content> ... </content>
  </section>
  <!-- Repeat for as many sub-sections as desired -->
</sections>
]]></code>
          </listItem>
          <listItem>
            <para>
              When using the names of repositories, projects, menu items, window titles, folders and filenames, or emphasizing a word or phrase, surround them in <codeInline>&lt;legacyBold></codeInline> tags.
            </para>
          </listItem>
          <listItem>
            <para>
              When introducing new concepts and terminology, surround them in <codeInline>&lt;legacyItalic></codeInline> tags the first time they are used.
            </para>
          </listItem>
          <listItem>
            <para>
              When specifying code keywords, variable names or shell commands that are part of another sentence, use the <codeInline>&lt;codeInline></codeInline> tag to provide a clear separation to the reader between the sentence and the code element.
            </para>
          </listItem>
          <listItem>
            <para>
              Use ordered lists when listing a sequence of items that are performed in order using <codeInline>&lt;list class="ordered"></codeInline>.
            </para>
          </listItem>
          <listItem>
            <para>
              Sub-section titles should only use a capital letter for the first character (except for proper pronouns such as Hearthstone).
            </para>
          </listItem>
          <listItem>
            <para>
              Reference pages and sections that have not been written yet with <codeInline>[TODO: Some topic]</codeInline> so that they are easy to find and create a reference for later in the MAML code.
            </para>
          </listItem>
          <listItem>
            <para>
              Pages with multiple sections should always include a section outline at the top (you can use the <codeInline>&lt;autoOutline lead="In this section:"/></codeInline> tag to include this automatically at the end of your introduction. Sub-section outlines are optional.
            </para>
          </listItem>
          <listItem>
            <para>
              Place tips, notes and warnings immediately under the corresponding paragraph using <codeInline>&lt;alert class="tip/note/warning/caution/important"></codeInline>.
            </para>
          </listItem>
          <listItem>
            <para>
              All references to Brimstone code elements <legacyBold>must</legacyBold> be linked so that readers can click the element name to be taken to the relevant <codeEntityReference>R:Project_BrimstoneDocumentation</codeEntityReference> page. To refer to the root API Reference page itself, use <codeInline>&lt;codeEntityReference>R:Project_BrimstoneDocumentation&lt;/codeEntityReference></codeInline>.
            </para>
          </listItem>
          <listItem>
            <para>
              References to other topics must be linked so that readers can click on the topic name to be taken to the relevant documentation page.
            </para>
          </listItem>
          <listItem>
            <para>
              Place relevant copies of download links and topic links you used in a page in the <codeInline>&lt;relatedTopics></codeInline> tag at the end of the page.
            </para>
          </listItem>
        </list>
      </content>
    </section>

    <section address="tips">
      <title>Useful tips for documentation contributors</title>
      <content>
        <list class="bullet">
          <listItem>
            <para>The extensions added to Visual Studio by the SHFB installer provide topic document templates, MAML tag auto-completion and tag/attribute suggestions when editing <codeInline>.aml</codeInline> documents, along with code snippets you can insert by pressing CTRL+K, CTRL+X and browsing through the <legacyBold>My Xml Snippets</legacyBold> folder. Use these to save typing time and discover MAML elements and attributes that may be useful. Pressing the opening chevron (<codeInline>&lt;</codeInline>) will bring up an IntelliSense drop-down showing all of the valid tags for the current position in the document. Finishing an opening tag will automatically insert a closing tag at the cursor. Changing the opening or closing tag's name will change the tag name at the other end of the block automatically.
          </para>
          </listItem>
          <listItem>
            <para>Use CTRL+K, CTRL+F to reformat the current selection or CTRL+K, CTRL+D to reformat the whole document with appropriate indenting. This is very useful when used in combination with the auto-completion above because you do not have to care about making a mess. Insert your code snippets and auto-completions quickly, then reformat the document when you're done.</para>
          </listItem>
          <listItem>
            <para>Use the <legacyBold>Entity References</legacyBold> window to drag tag syntax elements into your document to save typing and working with GUIDs and code element link declarations directly. The window can be used to insert images, topics and API references.
          </para>
          </listItem>
          <listItem>
            <para>Preview your work in the <legacyBold>Topic Previewer</legacyBold> window before compiling the documentation to save time.
          </para>
          </listItem>
          <listItem>
            <para>Brimstone's solution projects have Sandcastle and MAML code blocks enabled, allowing you to use MAML elements and some proprietary Sandcastle tags such as <codeInline>&lt;inheritDoc/></codeInline> directly in the code's XML documentation. Use this to make the documentation more readable and maintainable.</para>
          </listItem>
          <listItem>
            <para>If you are not sure how to write the tags to render a particular item, try to search through the existing documentation's <codeInline>.aml</codeInline> files to find an already-written example.</para>
          </listItem>
          <listItem>
            <para>You can use the standalone Sandcastle Help File Builder project editor to work with documentation if you prefer, however for a smoother and more integrated development experience we strongly recommend using the Visual Studio SHFB extension instead.</para>
          </listItem>
        </list>
      </content>
    </section>

    <relatedTopics>
      <externalLink>
        <linkText>Sandcastle Help File Builder downloads</linkText>
        <linkUri>https://GitHub.com/EWSoftware/SHFB/releases</linkUri>
        <linkTarget>_blank</linkTarget>
      </externalLink>
      <externalLink>
        <linkText>Sandcastle MAML Guide</linkText>
        <linkUri>http://ewsoftware.github.io/MAMLGuide/html/303c996a-2911-4c08-b492-6496c82b3edb.htm</linkUri>
        <linkTarget>_blank</linkTarget>
      </externalLink>
      <externalLink>
        <linkText>Sandcastle XML Comments Guide</linkText>
        <linkUri>http://ewsoftware.github.io/XMLCommentsGuide/html/4268757F-CE8D-4E6D-8502-4F7F2E22DDA3.htm</linkUri>
        <linkTarget>_blank</linkTarget>
      </externalLink>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
