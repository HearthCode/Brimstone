<?xml version="1.0" encoding="utf-8"?>
<topic id="c1506970-e752-4aa2-9c66-98de53657db6" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        Pre-Alpha Update 3 was released on XXth September 2016
      </para>
    </introduction>

    <section>
      <title>Changes in This Release</title>
      <content>

        <list class="bullet">
          <listItem>
            <para>Various new tag properties</para>
          </listItem>
          <listItem>
            <para>
              Ability to customize maximum zone sizes (maximum minions on board, hand size etc.)
            </para>
          </listItem>
          <listItem>
            <para>
              Initial implementation of targeting logic
            </para>
          </listItem>
          <listItem>
            <para>
              Split Controller up into Controller and (I)ZoneController. Fix bugs in controller assignments.
            </para>
          </listItem>
          <listItem>
            <para>
              Many improvements to zone semantics: Zone and ZonePosition tag properties, ZoneMove, ZoneSwap etc. with automatic ownership transfer and optimized same zone moves where allowed
            </para>
          </listItem>
          <listItem>
            <para>
              Interactive mulligan code has been completed
            </para>
          </listItem>
          <listItem>
            <para>
              Various new card definitions have been added
            </para>
          </listItem>
          <listItem>
            <para>
              Many performance optimizations - tree search performance more than doubled, cloning performance more than tripled
            </para>
          </listItem>
          <listItem>
            <para>
              BFS parallel tree search now utilizes a higher amount of CPU resource per core
            </para>
          </listItem>
          <listItem>
            <para>
              Allow Then() to be used with QueueActions and List&lt;QueueAction> as well as ActionGraphs
            </para>
          </listItem>
          <listItem>
            <para>
              Implement complete game flow PowerHistory/tag semantics
            </para>
          </listItem>
          <listItem>
            <para>
              Many improvements to tag handling and implementation of missing tags, bringing us closer to parity with Hearthstone
            </para>
          </listItem>
          <listItem>
            <para>
              Mana cost and payment semantics, temporary mana, overload
            </para>
          </listItem>
          <listItem>
            <para>
              Add Concede action
            </para>
          </listItem>
          <listItem>
            <para>
              Bug fixes in BrimstoneVisualizer
            </para>
          </listItem>
          <listItem>
            <para>
              Initial implementation of Attack action
            </para>
          </listItem>
          <listItem>
            <para>
              Many new unit tests
            </para>
          </listItem>
          <listItem>
            <para>
              Entity inheritance and interface hierarchies have been re-designed to be more clean and consistent
            </para>
          </listItem>
          <listItem>
            <para>
              Add IPlayable.GiveTo() helper
            </para>
          </listItem>
          <listItem>
            <para>
              Reduce the amount of end-user type casting required to zero
            </para>
          </listItem>
          <listItem>
            <para>
              New Exception model
            </para>
          </listItem>
          <listItem>
            <para>
              Add IsPlayable, SufficientMana, LiveEntities and other helper properties
            </para>
          </listItem>
          <listItem>
            <para>
              Add game action blocks and optimize ActionQueue to minimize unnecessary stacking
            </para>
          </listItem>
          <listItem>
            <para>
              Complete re-implementation of trigger semantics to be faster and more closely match Hearthstone
            </para>
          </listItem>
          <listItem>
            <para>
              ActionQueue is now a stack of queues
            </para>
          </listItem>
          <listItem>
            <para>
              Prototype implementation of QueueTree (experimental - do not use in production code)
            </para>
          </listItem>
          <listItem>
            <para>
              Add single-block processing API to ActionQueue
            </para>
          </listItem>
          <listItem>
            <para>
              Re-factor namespaces and class names, re-organize code folder hierarchy to be more consistent
            </para>
          </listItem>
          <listItem>
            <para>
              Delegate events for entity creation and changes (OnEntityCreated, OnEntityChanged)
            </para>
          </listItem>
          <listItem>
            <para>
              Debug log flags
            </para>
          </listItem>
          <listItem>
            <para>
              Use of immutable collections where appropriate to improve cloning performance
            </para>
          </listItem>
          <listItem>
            <para>
              Implement PLAY, POWER, ATTACK, TRIGGER and DEATHS blocks
            </para>
          </listItem>
          <listItem>
            <para>
              New asynchronous API methods
            </para>
          </listItem>
          <listItem>
            <para>
              Implement hero power entity logic
            </para>
          </listItem>
          <listItem>
            <para>
              Add BrimstoneDocumentation documentation project
            </para>
          </listItem>
          <listItem>
            <para>
              Split Benchmarks project out into BrimstoneProfiler repository and add multi-commit benchmarking tool
            </para>
          </listItem>
          <listItem>
            <para>
              Change items that should not be visibile to outside code from <codeInline>public</codeInline> to <codeInline>internal</codeInline>.
            </para>
          </listItem>
          <listItem>
            <para>
              Greater compatibility with single-core CPUs and Mono
            </para>
          </listItem>
          <listItem>
            <para>
              Large number of tweaks and bug fixes
            </para>
          </listItem>
        </list>
      </content>
    </section>

    <relatedTopics>
      <link xlink:href="cfbc1e9f-a4cf-4463-8007-491c7ac285fc" />
    </relatedTopics>

  </developerConceptualDocument>
</topic>
